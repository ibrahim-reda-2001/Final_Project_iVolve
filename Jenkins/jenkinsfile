pipeline {
    agent any

    tools {
        gradle 'ibra-gradle'
    }

    stages {
         

        stage('Build') {
            steps {
                sh '''
                    gradle build
                '''
            }
            post {
                success {
                    echo 'Build Success'
                }
                failure {
                    echo 'Build Failed'
                }
            }
        }

        stage('Test') {
            steps {
                sh '''  
                    gradle test
                '''
            }
            post {
                success {
                    echo 'Test Success'
                }
                failure {
                    echo 'Test Failed'
                }
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SCANNER_HOME = tool 'sonar-tool' // Make sure this matches the tool name in Jenkins
            }
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh """
                       
                        ${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=demo-app \
                        -Dsonar.projectName=demo-springboot-app \
                        -Dsonar.java.binaries=build/classes/java/main/,build/classes/java/test/ \
                        -Dsonar.sources=src/main/java/ \
                        -Dsonar.tests=src/test/java/ \
                        -Dsonar.junit.reportPaths=build/test-results/test/
                    """
                }
            }
        }
        
    }
}
